---
import Headline from '@widgets/Headline.astro';
import ContentGridItem from './Partials/ContentGridItem.astro';

/*
bladeCssId
fieldGroupName
bladeExtraClasses
description
eyebrow
headline
headlineTag
headlineTypography
contentItems {
	image {
		altText
		sourceUrl
	}
	headline
	headlineTag
	headlineTypography
	description
	linkUrl
}
*/

interface Props {
	bladeCssId?: string,
	fieldGroupName?: string,
	bladeExtraClasses?: string,
	description?: string,
	eyebrow?: string,
	headline?: string,
	headlineTag?: string,
	headlineTypography?: string,
	contentItems?: {
		image: {
			altText,
			sourceUrl
		}
		headline,
		headlineTag,
		headlineTypography,
		description,
		linkUrl
	}[]
}

const {
	bladeCssId = '',
	bladeExtraClasses = '',
	description = '',
	eyebrow = '',
	headline = '',
	headlineTag = '',
	headlineTypography = '',
	contentItems = []
} = Astro.props;


// console.log(contentItems);
---

<style lang="scss">
	@import 'src/styles/abstracts/variables';

	[is='flynt-block-three-col-content'] {
		min-height: 100vh;

		.intro {
			max-width: 117rem;

			&-eyebrow {
				@include typography-eyebrow;
			}

			&-blurb {
				@include typography-blurb;
				@include spacing('large');
			}
		}

		.features {
			@include row;

			.art {
				padding-left: 0;
				padding-right: 0;
			}
		}
	}

	.marker--underline {
          color: var(--color-pink);
          position: relative;

          &::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 0.33em;
            width: 102%;
            background-image: url(/images/marker-underline-black.svg);
            background-size: 100%;
            background-repeat: no-repeat;
            pointer-events: none;
          }
        }
</style>

<div id={bladeCssId} class:list={["content-with-grid has-grid-bg blade", {bladeExtraClasses}]} is="flynt-block-three-col-content">
	<div class="container">
		<div class="intro">
			{eyebrow && <div class="intro-eyebrow">{eyebrow}</div>}
			{headline && <Headline content={headline} tag={headlineTag} typography={headlineTypography} />}
			{description && <div class="intro-blurb" set:html={description} /> }
		</div>
		{ Object.keys(contentItems).length > 0 &&
			<div class="features">
				<span class="art art--arrow"></span>
				 { contentItems.map((item) => {
					return <ContentGridItem
						image={item.image}
						headline={item.headline}
						headlineTag={item.headlineTag}
						headlineTypography={item.headlineTypography}
						description={item.description}
						linkUrl={item.linkUrl}
					/>
				 }) }
				
			</div>
		}
	</div>
</div>
