---
import CTAButton from '@widgets/CTAButton.astro';

interface Props {
	ctaUrl?: string,
	cardHeadline?: string,
	cardDescription?: string,
	cardBackground?: {
		sourceUrl
	}
}

const {
	ctaUrl = '',
	cardHeadline = '',
	cardDescription = '',
	cardBackground = {
		sourceUrl: ''
	}
} = Astro.props;

---

<div class="post-outer swiper-slide">
	<article class="post themeDark">
		<picture class="post-image">
			<img class="lazyload" src={cardBackground.sourceUrl} width="570" height="540" alt="Post Image">
		</picture>
		<div class="post-content boxPadding">
			<h4 class="text-white">{cardHeadline}</h4>
			<p class="body-default text-white mt-4 mt-lg-5">{cardDescription}</p>
			<CTAButton
				label = "Read More"
				href = {ctaUrl}
				target = "_self"
				style = "text"
			/>
		</div>
	</article>
</div>

<style lang="scss">
	@import 'src/styles/abstracts/variables';
	.content {
		@include row;

		&--logos {
			align-items: center;
			margin-top: 6rem;

			@media (min-width: $breakpoint-tablet) {
				margin-top: $component-spacing-tablet;
			}

			@media (min-width: $breakpoint-desktop) {
				margin-top: $component-spacing-desktop;
			}
		}
	}

	.intro {
		@include col(12);

		@media (min-width: $breakpoint-tablet-horizontal) {
			@include col(5);
		}

		p {
			@include typography-blurb;
		}
	}

	.posts {
		display: flex;
		flex-wrap: nowrap;
		margin-top: 4rem;

		@media (min-width: $breakpoint-tablet-horizontal) {
			margin-top: 0;
		}

		&-outer {
			@include col(12);
			overflow: visible;

			@media (min-width: $breakpoint-tablet-horizontal) {
				@include col(6);
				@include offset(1);
			}
		}
	}

	.swiper {
		position: relative;

		@media (min-width: $breakpoint-tablet) {
			clip-path: inset(-100vw -100vw -100vw 0.2rem);
		}

		&-container-initialized {
			.swiper-wrapper {
				display: flex;
				flex-wrap: nowrap;
			}
		}

		&-button {
			&-next {
				right: calc(-100% + 16.66667%) !important;
			}

			&-prev {
				left: calc(-100% + 8.33333%) !important;
			}

			&-prev {
				&.swiper-button-disabled {
					opacity: 1;
				}
			}
		}
	}

	.post {
		height: 30.9rem;
		position: relative;

		@media (min-width: $breakpoint-mobile-horizontal) {
			height: 49.3rem;
		}

		@media (min-width: $breakpoint-tablet-horizontal) {
			height: 51.1rem;
		}

		@media (min-width: $breakpoint-tablet-horizontal) {
			height: 36rem;
		}

		@media (min-width: $breakpoint-desktop) {
			height: 55rem;
		}

		&-outer {
			@include col(12);

			&:not(:last-child) {
				margin-right: $gutter-width * 2;

				@media (min-width: $breakpoint-tablet) {
					margin-right: $gutter-width-tablet * 2;
				}

				@media (min-width: $breakpoint-desktop) {
					margin-right: $gutter-width-desktop * 2;
				}
			}
		}

		&-image {
			display: block;
			height: 100%;
			overflow: hidden;
			position: relative;

			img {
				height: 100%;
				object-fit: cover;
				width: 100%;
			}
		}

		&-content {
			bottom: 0;
			left: 0;
			position: absolute;

			p {
				@include spacing('medium');
				display: none;
				margin-bottom: 2rem;

				@media (min-width: $breakpoint-tablet) {
					display: block;
				}
			}

			&.boxPadding {
				@include reset-content-margins;
				padding: 4rem;

				@media (min-width: $breakpoint-tablet) {
					padding: 5rem;
				}
			}
		}

		&.themeDark {
			color: $color-background;
		}
	}
</style>