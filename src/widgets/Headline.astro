---
interface Props {
  tag?: string;
  content: string;
  typography?: string;
}

const { content = "", tag = "h2", typography = "" } = Astro.props;

---

{
  ()=>{
    switch (tag) {
      case 'h1':
        return <h1 class:list={typography} set:html={content} />
      case 'h2':
        return <h2 class:list={typography} set:html={content} />
      case 'h3':
        return <h3 class:list={typography} set:html={content} />
      case 'h4':
        return <h4 class:list={typography} set:html={content} />
      case 'h5':
        return <h5 class:list={typography} set:html={content} />
      case 'h6':
        return <h6 class:list={typography} set:html={content} />
      default:
        return <h2 class:list={typography} set:html={content} />
    }
  }
}

<style lang="scss">
  h1, h2, h3, h4, h5, h6 {

    :global(.marker-effect) {
      position: relative;

      &::after {
        content: '';
        position: absolute;
        background-size: 100%;
        background-repeat: no-repeat;
        pointer-events: none;
      }

      &.marker-underline {
        color: var(--color-pink);

        &::after {
          bottom: 0;
          left: 0;
          right: 0;
          height: 0.33em;
          width: 102%;
          background-image: url(/images/marker-underline-white.svg);
        }
      }

    }

  }
</style>